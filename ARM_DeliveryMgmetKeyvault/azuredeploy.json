{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vaults_deliverymgmtkeyVault_name": {
      "defaultValue": "deliverymgmtkeyVault",
      "type": "String"
    },
    "secretName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the secret that you want to create."
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the Azure location where the key vault should be created."
      }
    },
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of Storage Account to Create"
      }
    },
    "accountSasProperties": {
      "type": "object",
      "defaultValue": {
        "signedServices": "b",
        "signedPermission": "rw",
        "signedExpiry": "2025-03-01T00:00:01Z",
        "signedResourceTypes": "o"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
      }
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
      }

    },
    "FunctionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function APP Name Which has teh access to read teh secret key"
      }
    }
  },
  "variables": {
    "storageaccountresourceid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]",
    "apiVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]"
  },
  "resources": [

    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[parameters('vaults_deliverymgmtkeyVault_name')]",
      "location": "eastus",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "39fd5748-cdde-40d2-b18e-dc2f43cdd5e2",
        "accessPolicies": [
          {
            "tenantId": "39fd5748-cdde-40d2-b18e-dc2f43cdd5e2",
            "objectId": "c8c8f3f0-d9ff-4d51-9e59-950cde10b91d",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('FunctionAppName')), '2018-11-01', 'full').identity.principalId]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
      "dependsOn": [
       "[concat('Microsoft.KeyVault/vaults/', parameters('vaults_deliverymgmtkeyVault_name'))]"
      ],
      "apiVersion": "2018-02-14",
      "location": "[parameters('location')]",
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=', listKeys(variables('storageaccountresourceid'), variables('apiVersion')).keys[0].value, ';EndpointSuffix=core.windows.net')]"

      }
    }
  ]
}